@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 265 89% 78%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;

    --radius: 0.5rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-dark-600 text-gray-100;
    background-image: radial-gradient(circle at 50% 50%, rgba(10, 10, 10, 0.8) 0%, rgba(0, 0, 0, 1) 100%),
      radial-gradient(rgba(50, 50, 50, 0.3) 1px, transparent 0),
      radial-gradient(rgba(50, 50, 50, 0.3) 1px, transparent 0);
    background-size: 100% 100%, 40px 40px, 40px 40px;
    background-position: 0 0, 20px 20px, 0 0;
    font-feature-settings: "rlig" 1, "calt" 1;
  }

  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.1);
  }

  ::-webkit-scrollbar-thumb {
    background: rgba(139, 92, 246, 0.3);
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: rgba(139, 92, 246, 0.5);
  }

  /* Selection styling */
  ::selection {
    background: rgba(139, 92, 246, 0.3);
    color: white;
  }

  ::-moz-selection {
    background: rgba(139, 92, 246, 0.3);
    color: white;
  }
}

.glass-card {
  @apply bg-dark-500/40 backdrop-blur-sm border border-dark-300/20;
}

.glass-effect {
  @apply backdrop-blur-sm bg-dark-500/40 border border-dark-300/20;
}

.gradient-border {
  position: relative;
  border-radius: 0.5rem;
  overflow: hidden;
}

.gradient-border::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 0.5rem;
  padding: 1px;
  background: linear-gradient(45deg, #8b5cf6, #06b6d4);
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
}

.glow {
  box-shadow: 0 0 15px rgba(139, 92, 246, 0.5);
}

.glow-cyan {
  box-shadow: 0 0 15px rgba(6, 182, 212, 0.5);
}

/* 3D Transform Styles */
.perspective-[1000px] {
  perspective: 1000px;
}

.transform-style-3d {
  transform-style: preserve-3d;
}

.translate-z-\[10px\] {
  transform: translateZ(10px);
}

.translate-z-\[20px\] {
  transform: translateZ(20px);
}

.translate-z-\[30px\] {
  transform: translateZ(30px);
}

.translate-z-\[40px\] {
  transform: translateZ(40px);
}

.translate-z-\[50px\] {
  transform: translateZ(50px);
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.border-l-12 {
  border-left-width: 12px;
}

/* New 3D Animation Keyframes */
@keyframes rotate-3d-slow {
  0% {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
  }
  25% {
    transform: rotateX(5deg) rotateY(10deg) rotateZ(2deg);
  }
  50% {
    transform: rotateX(0deg) rotateY(15deg) rotateZ(0deg);
  }
  75% {
    transform: rotateX(-5deg) rotateY(5deg) rotateZ(-2deg);
  }
  100% {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
  }
}

@keyframes rotate-y-slow {
  0% {
    transform: rotateY(0deg);
  }
  50% {
    transform: rotateY(15deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}

@keyframes rotate-x-slow {
  0% {
    transform: rotateX(0deg);
  }
  50% {
    transform: rotateX(10deg);
  }
  100% {
    transform: rotateX(0deg);
  }
}

@keyframes float-rotate {
  0% {
    transform: translateY(0) rotateY(0deg);
  }
  25% {
    transform: translateY(-5px) rotateY(5deg);
  }
  50% {
    transform: translateY(-10px) rotateY(10deg);
  }
  75% {
    transform: translateY(-5px) rotateY(5deg);
  }
  100% {
    transform: translateY(0) rotateY(0deg);
  }
}

@keyframes pulse-3d {
  0% {
    transform: scale(1) translateZ(0px);
  }
  50% {
    transform: scale(1.05) translateZ(10px);
  }
  100% {
    transform: scale(1) translateZ(0px);
  }
}

/* Animation Classes */
.animate-rotate-3d {
  animation: rotate-3d-slow 8s ease-in-out infinite;
  transform-style: preserve-3d;
}

.animate-rotate-y {
  animation: rotate-y-slow 6s ease-in-out infinite;
  transform-style: preserve-3d;
}

.animate-rotate-x {
  animation: rotate-x-slow 7s ease-in-out infinite;
  transform-style: preserve-3d;
}

.animate-float-rotate {
  animation: float-rotate 8s ease-in-out infinite;
  transform-style: preserve-3d;
}

.animate-pulse-3d {
  animation: pulse-3d 5s ease-in-out infinite;
  transform-style: preserve-3d;
}

/* Animation Delays */
.animation-delay-100 {
  animation-delay: 100ms;
}

.animation-delay-200 {
  animation-delay: 200ms;
}

.animation-delay-300 {
  animation-delay: 300ms;
}

.animation-delay-400 {
  animation-delay: 400ms;
}

.animation-delay-500 {
  animation-delay: 500ms;
}

.animation-delay-1000 {
  animation-delay: 1000ms;
}

.animation-delay-1500 {
  animation-delay: 1500ms;
}

.animation-delay-2000 {
  animation-delay: 2000ms;
}

/* Scroll Animation Classes */
.scroll-animate {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.6s ease-out;
}

.scroll-animate.in-view {
  opacity: 1;
  transform: translateY(0);
}

/* Modal Animation Classes */
.animate-in {
  animation: fadeIn 0.5s ease-out forwards;
}

.fade-in {
  animation: fadeIn 0.5s ease-out forwards;
}

.slide-in-from-bottom-10 {
  animation: slideInFromBottom10 0.5s ease-out forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInFromBottom10 {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Dropdown Animation Classes */
.dropdown-enter {
  opacity: 0;
  transform: translateY(-10px);
}

.dropdown-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 200ms, transform 200ms;
}

.dropdown-exit {
  opacity: 1;
  transform: translateY(0);
}

.dropdown-exit-active {
  opacity: 0;
  transform: translateY(-10px);
  transition: opacity 200ms, transform 200ms;
}

/* Loading states */
.loading-shimmer {
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

/* Focus styles for accessibility */
.focus-visible:focus {
  outline: 2px solid #8b5cf6;
  outline-offset: 2px;
}

/* Button hover effects */
.btn-hover-effect {
  position: relative;
  overflow: hidden;
}

.btn-hover-effect::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.btn-hover-effect:hover::before {
  left: 100%;
}

/* Card hover effects */
.card-hover {
  transition: all 0.3s ease;
}

.card-hover:hover {
  transform: translateY(-5px);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
}

/* Text gradient animations */
.text-gradient-animate {
  background: linear-gradient(-45deg, #8b5cf6, #06b6d4, #8b5cf6, #06b6d4);
  background-size: 400% 400%;
  animation: gradientShift 3s ease infinite;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Responsive improvements */
@media (max-width: 768px) {
  .mobile-menu {
    animation: slideInFromRight 0.3s ease-out;
  }
}

@keyframes slideInFromRight {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

/* Print styles */
@media print {
  .no-print {
    display: none !important;
  }
}
